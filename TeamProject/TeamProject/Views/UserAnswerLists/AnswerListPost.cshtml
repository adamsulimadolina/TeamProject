<head>
    <style>
        .dtHorizontalVerticalExampleWrapper {
            max-width: 800px;
            height: 1000px;
            margin: 0 auto;
        }

        #dtHorizontalVerticalExample th, td {
            white-space: nowrap;
        }
        th {
          
            color: white;
        }
        td {
            background-color: white;
        }
    </style>
</head>

@model IEnumerable<FormGenerator.Models.Modele_pomocnicze.UserAnswerList>

@{
    ViewData["Title"] = "Index";
    List<SelectListItem> tmp = ViewBag.List;
    bool flag = false;


}


<body>
    <input type="hidden" id="urlGetValueSelected" value="@Url.Action("AnswerListPost", "UserAnswerLists")" />
    @Html.DropDownList("mylist", tmp)
    <input id="Button1" type="button" value="Potwierdź" />
    <button id="translate" class="btn btn-danger" >tłumacz</button>
    <table id="dtHorizontalVerticalExample" class="table table-striped table-bordered table-sm " cellspacing="0" width="100%">
        <thead>
            
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Id_User)
                </th>

                @foreach (var elem in ViewBag.Fields)
                {
                    <th class="translate">
                        
                       @elem.Name
                    </th>

                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="column-width:100px">
                        @Html.DisplayFor(modelItem => item.Id_User)
                    </td>
                    @foreach (var el in ViewBag.Fields)
                    {
                        flag = false;
                        @for (int i = 0; i < item.user_answer_list.Count; i++)
                        {
                            if (el.Id == item.user_answer_list[i].IdField)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.user_answer_list[i].Answer)
                                </td>
                                flag = true;
                                break;
                            }
                        }
                        if (!flag)
                        {
                            <td></td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
    <div class="p-5">
        <a href="#" class="btn btn-danger" id="test" onClick="javascript:fnExcelReport();">Pobierz</a>
    </div>

    <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
    <link href="https://nightly.datatables.net/css/jquery.dataTables.css" rel="stylesheet" type="text/css" />
    <script src="https://nightly.datatables.net/js/jquery.dataTables.js"></script>


    <script type="text/javascript">
        $('#dtHorizontalVerticalExample').DataTable({
            "scrollX": true,
            "scrollY": '90vh',
            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]],
        });
        $('.dataTables_length').addClass('bs-select');
        $(document).ready(function () {
            $("#Button1").click(function (event) {

                event.preventDefault();

                var selCat = $("#mylist").val();
                var FormName = $("#mylist option:selected").text();
                sessionStorage.setItem('name', FormName);



                window.location.href = '/UserAnswerLists/AnswerListPost/' + selCat;
            });


        });


        function fnExcelReport() {

            let name = sessionStorage.getItem('name');
            let filename = name.toString() + '.xls';
            var tab_text = '<html xmlns:x="urn:schemas-microsoft-com:office:excel">';
            tab_text = tab_text + '<head><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>';

            tab_text = tab_text + "<x:Name>" + name + "</x:Name>";

            tab_text = tab_text + '<x:WorksheetOptions><x:Panes></x:Panes></x:WorksheetOptions></x:ExcelWorksheet>';
            tab_text = tab_text + '</x:ExcelWorksheets></x:ExcelWorkbook></xml></head><body>';

            tab_text = tab_text + "<table border='0px'>";
            tab_text = tab_text + $('#dtHorizontalVerticalExample').html();
            tab_text = tab_text + '</table></body></html>';

            var data_type = 'data:application/vnd.ms-excel';

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf("MSIE ");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
                if (window.navigator.msSaveBlob) {
                    var blob = new Blob([tab_text], {
                        type: "application/csv;charset=utf-8;"
                    });
                    navigator.msSaveBlob(blob, filename);
                }
            } else {
                $('#test').attr('href', data_type + ', ' + encodeURIComponent(tab_text));
                $('#test').attr('download', filename);
            }

        }
        //DANIEL 02.04 - translacja tabel
        let btntranslate = document.getElementById("translate");
        btntranslate.addEventListener("click", addInput);        
        let startNames =[];
        function addInput() {
            let headers = $('.translate');
            startNames = [];
            let hLength = headers.length/2;
            for (var i = 0; i < hLength; i++) {
                var inp = document.createElement("input");
                inp.setAttribute("value", headers[i].innerText);
                startNames.push(headers[i].innerText);
                inp.setAttribute("class", "headTranslation");
                headers[i].innerText = "";
                headers[i].appendChild(inp);                             
            }
            this.innerText = "zapisz";
            this.id = "save";
            btntranslate.removeEventListener("click", addInput);
            btntranslate.addEventListener("click", save);         
        }
        async function save() { 
            btntranslate.removeEventListener("click", save);
            btntranslate.addEventListener("click", addInput);
            let inputs = document.querySelectorAll('.headTranslation');
            let headers = $('.translate');
            let hLength = headers.length/2;
            for (var i = 0; i < hLength; i++) {              
                headers[i].innerText = inputs[i].value;
                if (inputs[i].value != startNames[i]) {
                    await saveTranslate(inputs[i].value, startNames[i]);   
                }
                                        
            }
            this.innerText = "tłumacz";
            this.id = "translate";
        };
        async function saveTranslate(name1,name2){
            let TableNameTranslation = {};
            TableNameTranslation.DatabaseName = name2;
            TableNameTranslation.DisplayedName = name1;
            $.post("/save_translation", {
                baseName: name2,
                newName: name1
            });           
        }
       
           
    </script>
</body>