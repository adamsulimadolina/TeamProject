<head>
    <style>

        .dtHorizontalVerticalExampleWrapper {
            max-width: 800px;
            height: 1000px;
            margin: 0 auto;
        }

        #dtHorizontalVerticalExample th, td {
            white-space: nowrap;
            min-width: 90px;
        }

        .header-visualizer h2 {
            text-shadow: 3px 3px 6px grey;
        }
    </style>
    <link rel="stylesheet" href="~/css/bootstrap-table.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="~/js/bootstrap-table.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/js/FileSaver.min.js"></script>
    <script type="text/javascript" src="~/js/xlsx.core.min.js"></script>
    <script type="text/javascript" src="~/js/tableExport.min.js"></script>
    <script src="~/js/bootstrap-table-export.js"></script>
    <script src="~/js/all.js"></script>
</head>

@model IEnumerable<FormGenerator.Models.Modele_pomocnicze.UserAnswerList>

@{
    ViewData["Title"] = "Index";
    List<SelectListItem> tmp = ViewBag.List;
    bool flag = false;


}


<body>
    <br />
    <input type="hidden" id="urlGetValueSelected" value="@Url.Action("AnswerListPost", "UserAnswerLists")" />
    @Html.DropDownList("mylist", tmp, new { @class = "custom-select-option" })
    <button id="Button1" class="button_search">Potwierdź</button>
    <button id="translate" class="button_search">Tłumacz</button>
    <br /><br />
    <br />
    <div class="header-visualizer">
        <h3>@ViewBag.Name</h3>
    </div>

    <table id="dtHorizontalVerticalExample" data-toggle="table" data-search="true"
           data-pagination="true"
           data-show-export="true" class="overflow-auto">
        <thead>
            <tr>
                <th data-sortable="true">
                    Pacjent
                </th>
                <th data-sortable="true">
                    Nr Badania
                </th>
                @foreach (var elem in ViewBag.Fields)
                {
                    <th data-sortable="true" class="translate">
                        @elem.Name
                    </th>
                }
            </tr>
        </thead>
        @{int nr = 0; }
        <tbody>
            @foreach (var item in Model)
            {
                nr++;
                <tr class="tr-class-@nr" id="tr-id-@nr">
                    <td>
                        @Html.DisplayFor(modelItem => item.Id_User)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id_Test)
                    </td>
                    @foreach (var el in ViewBag.Fields)
                    {
                        flag = false;
                        @for (int i = 0; i < item.user_answer_list.Count; i++)
                        {
                            if (el.Id == item.user_answer_list[i].IdField)
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.user_answer_list[i].Answer)
                                </td>
                                flag = true;
                                break;
                            }
                        }
                        if (!flag)
                        {
                            <td></td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>



    <script type="text/javascript">
        //$('#dtHorizontalVerticalExample').DataTable({
        //    "scrollX": true,
        //    "scrollY": true,
        //    "pageLength": 25,
        //    "bLengthChange": false,
        //    "bFilter": false--
        //});
        //$('.dataTables_length').addClass('bs-select');
        $(document).ready(function () {
            $('body').find('.dataTables_scrollBody').addClass("scrollbar")
            $("#Button1").click(function (event) {

                event.preventDefault();

                var selCat = $("#mylist").val();
                var FormName = $("#mylist option:selected").text();
                sessionStorage.setItem('name', FormName);



                window.location.href = '/UserAnswerLists/AnswerListPost/' + selCat;
            });
            $('.fixed-table-loading').hide();
            let input = document.getElementsByClassName('form-control')[0];
            input.placeholder = 'Szukaj';
        });


        //DANIEL 02.04 - translacja tabel
        let btntranslate = document.getElementById("translate");
        btntranslate.addEventListener("click", addInput);
        let startNames = [];
        function addInput() {
            let headers = Array.from(document.querySelectorAll('th'));
            startNames = [];
            let hLength = headers.length;
            for (var i = 2; i < hLength; i++) {
                let inp = document.createElement("input");
                inp.setAttribute("value", headers[i].innerText);
                startNames.push(headers[i].innerText);
                inp.setAttribute("class", "headTranslation custom_input");
                headers[i].innerText = "";
                headers[i].appendChild(inp);
            }
            btntranslate.removeEventListener("click", addInput);
            btntranslate.addEventListener("click", save);
        }
        async function save() {
            btntranslate.removeEventListener("click", save);
            btntranslate.addEventListener("click", addInput);
            let inputs = document.querySelectorAll('.headTranslation');
            let headers = Array.from(document.querySelectorAll('th')).splice(2);
            let hLength = headers.length;
            for (var i = 0; i < hLength; i++) {
                let divsort = document.createElement("div");
                divsort.setAttribute("class", "th-inner sortable both");
                divsort.innerText = inputs[i].value;
                let divafter = document.createElement("div");
                divafter.setAttribute("class", "fht-cell");
                headers[i].appendChild(divsort);
                headers[i].appendChild(divafter);
                headers[i].removeChild(inputs[i]);
                if (inputs[i].value != startNames[i]) {
                    await saveTranslate(inputs[i].value, startNames[i]);
                }

            }
            this.innerText = "Tłumacz";
            this.id = "translate";
        };
        async function saveTranslate(name1, name2) {
            let TableNameTranslation = {};
            TableNameTranslation.DatabaseName = name2;
            TableNameTranslation.DisplayedName = name1;
            $.post("/save_translation", {
                baseName: name2,
                newName: name1
            });
        }


    </script>
</body>