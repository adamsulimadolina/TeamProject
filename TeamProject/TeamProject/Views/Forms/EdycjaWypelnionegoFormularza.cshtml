@model List<FieldWithValue>

@{
    ViewData["Title"] = "Formularz";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>




<style>

    table {
        border-collapse: collapse;
        width: 100%;
        box-shadow: black;
    }

    th {
        text-align: left;
        color: lightgray;
        padding: 8px;
        border-bottom: 2px solid grey;
        color: black;
    }

    td {
        text-align: left;
        padding: 8px;
        border-bottom: 2px solid grey;
    }

    tr {
        background-color: whitesmoke;
    }



    a {
        color: forestgreen;
        font-weight: 500;
    }

    .table tbody tr:hover {
        background-color: darkgray;
    }

    td {
        color: black;
    }
</style>
<h3>Edytuj formularz</h3>
<div class="cities">
    <div class="row">
        <div class="col-md-10">
            <form asp-action="Formularz">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <table class="table table-striped">

                    @for (var i = 0; i < Model.Count; i++)
                    {
                        String typ = "";
                        if (Model[i].Dependencies.Count > 0)
                        {
                            typ = @Model[i].Dependencies.FirstOrDefault().DependencyType.ToString();
                        }

                        //val="@Model[i].Dependencies.FirstOrDefault().ActivationValue"

                        <tr>
                            <th parentId="@Model[i].Field.Id" type=@typ>
                                <input asp-for="@Model[i].Field.Id" hidden />
                                <input asp-for="@Model[i].Field.Name" hidden />
                                <input asp-for="@Model[i].Field.Type" hidden />
                                @if (Model[i].Field.Type == "text")
                                {

                                    <label asp-for="@Model[i].Field.Name" class="control-label">@Model[i].Field.Name</label>



                                    <input class="form-control log " type="@Model[i].Field.Type" asp-for="@Model[i].TextValue" />


                                    <span asp-validation-for="@Model[i].Field.Type" class="text-danger"></span>


                                }
                                else if (Model[i].Field.Type == "checkbox")
                                {


                                    <label asp-for="@Model[i].Field.Name" class="control-label">@Model[i].Field.Name</label>


                                    <input class="form-control checkmark log " type="@Model[i].Field.Type" asp-for="@Model[i].BoolValue" />


                                    <span asp-validation-for="@Model[i].Field.Name" class="text-danger"></span>

                                }

                                else if (Model[i].Field.Type == "number")
                                {


                                    <label asp-for="@Model[i].Field.Name" class="control-label">@Model[i].Field.Name</label>


                                    <input class="form-control log " id="@Model[i].Field.Id" numInput="true" type="text" asp-for="@Model[i].TextValue" />
                                    <p errorParagraf="true" ErrorId="@Model[i].Field.Id" hidden style="color: red"></p>

                                }

                                else if (Model[i].Field.Type == "select")
                                {

                                    <label asp-for="@Model[i].Field.Name" class="control-label">@Model[i].Field.Name</label>


                                    <select class="form-control log log-select main" asp-for="@Model[i].TextValue" style="width:250px;" id="@Model[i].Field.Id">

                                        @foreach (var option in Model[0].options)
                                        {
                                            @if (option.idField == Model[i].Field.Id)
                                            {
                                                <option value="@option.option">@option.option</option>
                                            }
                                        }
                                    </select>




                                }

                                @* @if (Model[i].Dependencies.RelatedFields.Count > 0)*@
                                @foreach (FieldFieldDependency dependency in Model[i].Dependencies)
                                {
                                    @for (var j = 0; j < dependency.RelatedFields.Count; j++)
                                    {
                                        <div style="margin-left: 100px" class="dependent" hidden idval="@dependency.ThisField.Id" data-value="@dependency.ActivationValue">
                                            <input asp-for="@dependency.RelatedFields[j].Id" hidden />
                                            <input asp-for="@dependency.RelatedFields[j].Name" hidden />
                                            <input asp-for="@dependency.RelatedFields[j].Type" hidden />
                                            @if (dependency.RelatedFields[j].Type == "text")
                                            {
                                                <div>
                                                    <label asp-for="@dependency.RelatedFields[j].Name" class="control-label">@dependency.RelatedFields[j].Name</label>
                                                </div>

                                                <div>
                                                    @*asp-for="@Model[i].DepndenciesValue[j].textVal"*@
                                                    <input class="form-control log" idval="@Model[i].Field.Id" type="@dependency.RelatedFields[j].Type" asp-for="@Model[i].podrzedneFieldAnswers[dependency.IdDependency][j].textVal" />
                                                </div>
                                                <div>
                                                    <span asp-validation-for="@dependency.RelatedFields[j].Type" class="text-danger"></span>
                                                </div>

                                            }
                                            else if (dependency.RelatedFields[j].Type == "checkbox")
                                            {

                                                <div>
                                                    <label asp-for="@dependency.RelatedFields[j].Name" class="control-label">@dependency.RelatedFields[j].Name</label>
                                                </div>
                                                <div>
                                                    @*asp-for="@Model[i].DepndenciesValue[j].boolVal"*@
                                                    <input class="form-control checkmark log " idval="@Model[i].Field.Id" type="@dependency.RelatedFields[j].Type" asp-for="@Model[i].podrzedneFieldAnswers[dependency.IdDependency][j].boolVal" />
                                                </div>
                                                <div>
                                                    <span asp-validation-for="@dependency.RelatedFields[j].Name" class="text-danger"></span>
                                                </div>
                                            }

                                            else if (dependency.RelatedFields[j].Type == "number")
                                            {

                                                <div>
                                                    <label asp-for="@dependency.RelatedFields[j].Name" class="control-label">@dependency.RelatedFields[j].Name</label>
                                                </div>
                                                <div>
                                                    @*asp-for="@Model[i].DepndenciesValue[j].textVal"*@
                                                    <input class="form-control log " id="@dependency.RelatedFields[j].Id" numInput="true" idval="@Model[i].Field.Id" type="text" asp-for="@Model[i].podrzedneFieldAnswers[dependency.IdDependency][j].textVal" />
                                                    <p errorParagraf="true" ErrorId="@dependency.RelatedFields[j].Id" hidden style="color: red"></p>
                                                </div>

                                            }
                                            else if (dependency.RelatedFields[j].Type == "select")
                                            {

                                                <label asp-for="@dependency.RelatedFields[j].Name" class="control-label">@dependency.RelatedFields[j].Name</label>

                                                //asp-for="@Model[i].DepndenciesValue[j].textVal"
                                                <select class="form-control log log-select" style="width:250px;" id="@dependency.RelatedFields[j].Id" asp-for="@Model[i].podrzedneFieldAnswers[dependency.IdDependency][j].textVal">

                                                    @foreach (var option in Model[0].options)
                                                    {
                                                        @if (option.idField == dependency.RelatedFields[j].Id)
                                                        {
                                                            <option value="@option.option">@option.option</option>
                                                        }
                                                    }
                                                </select>




                                            }

                                        </div>
                                    }


                                }


                            </th>
                        </tr>
                    }
                    <tr id="response"></tr>
                </table>
                <div class="form-group">
                </div>
                <input hidden id="patient" type="number" name="patientId" />
                <div>
                    <input id="MainSubmit" style=" background-color:white;
                color:#66BB6A;
                font-size:20px;
                padding: 15px 35px;
                border-radius: 8px;
                position:center;" type="submit" asp-route-formId="@ViewBag.formid" value="Edytuj formularz" class="btn btn-primary" />

                </div>

            </form>

        </div>
    </div>
</div>

<script type="text/javascript">


    $(document).ready(function () {
        //console.log("hallo");
        //inputs.forEach(input => handleShow(input));
        //inputs.forEach(input => console.log(input.value));
        //inputs.forEach(input => input.addEventListener('load ', handleShow));

        let fb = document.querySelectorAll(".main");
    
        fb.forEach((dep) => {
         
            for (let i = 0; i < dep.parentNode.children.length; i++) {
                let input;
                if (dep.parentNode.children[i].className)
                    if (dep.parentNode.children[i].className.includes("form-control")) {
                        input = dep.parentNode.children[i];
             

                        handlerOnStart(dep.parentElement, dep.value);

                    }

            }
        });
        function handlerOnStart(par, val) {

            par.childNodes.forEach((child) => {
                if (child.className && child.className.includes("dependent")) {
                    child.setAttribute("hidden", "")
                }

            });

            par.childNodes.forEach((child) => {
                if (child.className && child.className.includes("dependent") && child.dataset.value == val) {
                    child.removeAttribute("hidden")
                }
            });

        }
    });


    //function handleShow(e) {
    //    console.log("halo");

    //    console.log(e.value);


    //    if (e.parentNode.getAttribute("type") == "FieldDuplication" && parseInt(e.parentNode.getAttribute("val")) >= parseInt(e.value) && parseInt(e.value) > 0) {

    //        let divs = (document.querySelectorAll("div[idval]"));
    //        console.log(divs)
    //        for (let i = 0, j = 0; i < e.value, j < e.value; i++) {
    //            if (divs[i].getAttribute("idval") === e.parentNode.getAttribute("parentId")) {
    //                divs[i].removeAttribute("hidden");
    //                j++;
    //            }
    //        }
    //    }
    //    else if (e.parentNode.getAttribute("type") == "FieldVisibly" && e.parentNode.getAttribute("val") === e.value) {
    //        //  e.target.parentElement.lastElementChild.removeAttribute("hidden");
    //        let x = (e.parentNode.getAttribute("parentid"));
    //        console.log(x)
    //        let inputs = (document.querySelectorAll(`div[idval="${x}"]`));
    //        inputs.forEach((input) => {
    //            input.value = null;
    //            //jak nullowac selecty
    //            console.log("removeHidden")
    //            input.removeAttribute("hidden")
    //        });
    //    }
    //    else {
    //        let x = (e.parentNode.getAttribute("parentid"));
    //        console.log(x)
    //        let inputs = (document.querySelectorAll(`input[idval="${x}"]`));
    //        console.log(inputs)
    //        inputs.forEach((input) => {
    //            input.value = null;
    //            console.log("setHidden")
    //            input.parentElement.parentElement.setAttribute("hidden", "")
    //            input.addEventListener("load", handler)
    //        });
    //    }

    //}





    function handleCheck(e) {
        console.log(e.target.parentNode.getAttribute("val"));
        console.log(e)
        if (e.target.parentNode.getAttribute("type") == "FieldDuplication" && parseInt(e.target.parentNode.getAttribute("val")) >= parseInt(e.target.value) && parseInt(e.target.value) > 0) {
            console.log(e.target.parentNode.getAttribute("val"))
            let divs = (document.querySelectorAll("div[idval]"));
            console.log(divs)
            for (let i = 0, j = 0; i < e.target.value, j < e.target.value; i++) {
                if (divs[i].getAttribute("idval") === e.target.parentNode.getAttribute("parentId")) {
                    divs[i].removeAttribute("hidden");
                    j++;
                }
            }
        }
        else if (e.target.parentNode.getAttribute("type") == "FieldVisibly" && e.target.parentNode.getAttribute("val") === e.target.value) {
            //  e.target.parentElement.lastElementChild.removeAttribute("hidden");
            let x = (e.target.parentNode.getAttribute("parentid"));
            console.log(x)
            let inputs = (document.querySelectorAll(`div[idval="${x}"]`));
            inputs.forEach((input) => {
                input.value = null;
                console.log(input)
                input.removeAttribute("hidden")
            });
        }
        else {
            let x = (e.target.parentNode.getAttribute("parentid"));
            console.log(x)
            let inputs = (document.querySelectorAll(`input[idval="${x}"]`));
            console.log(inputs)
            inputs.forEach((input) => {
                input.value = null;
                console.log(input)
                input.parentElement.parentElement.setAttribute("hidden", "")
            });
        }
    }
    //let dependentDuplication = document.querySelectorAll("th[val]");
    let inputs = document.querySelectorAll("th[val] > input.form-control , select.form-control");
    inputs.forEach(input => input.addEventListener('change', handleCheck));
    let fieldVisibly = document.querySelectorAll("th[type=fieldVisibly]");
    console.log(fieldVisibly)

    fieldVisibly.forEach((dep) => {

        for (let i = 0; i < dep.childNodes.length; i++) {
            let input;
            if (dep.childNodes[i].className)
                if (dep.childNodes[i].className.includes("form-control")) {
                    input = dep.childNodes[i];

                    input.addEventListener("change", handler)

                }

        }
    });

    function handler(e) {
        let input = e.target;
        let parent = e.target.parentElement;

        let inputVal = e.target.value;
        console.log(input);
        console.log("xd")
        console.log(parent)

        parent.childNodes.forEach((child) => {
            if (child.className && child.className.includes("dependent")) {
                child.setAttribute("hidden", "")
            }
            console.log("xdd")
        });

        parent.childNodes.forEach((child) => {
            if (child.className && child.className.includes("dependent") && child.dataset.value == inputVal) {
                child.removeAttribute("hidden")
            }
        });
    }
    //        .filter(function (field) {
    //	return field.matches('.log');
    //});
</script>

